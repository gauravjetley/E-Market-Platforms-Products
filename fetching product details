#%%

import requests
from bs4 import BeautifulSoup
import os
import csv
import pandas as pd
import numpy as np


#%%

df = pd.read_csv('A:/Independent Research/amazon_webpage_links.csv', delimiter=',')


#%% fetching best sellers in departments

f = open('A:/Independent Research/amazon_webpage_links.csv')
csv_f = csv.reader(f)

departments = []
department_links = []
for row in csv_f:
  departments.append(row[0])
  department_links.append(row[1])
  
All_depts = np.unique(departments)
unique_dept_links = np.unique(department_links)

unique_dept_links = np.delete(unique_dept_links,22)

print len(unique_dept_links)
#%%
i = 0
file = open(os.path.expanduser("A:\\Independent Research\\appliances.csv"),"wb")
    
for each in unique_dept_links:
    department_link = each
    print  str(i) + " --- " + department_link
    list2_data = requests.get(department_link)
    amazon_data_list2  = BeautifulSoup(list2_data.content, 'html.parser')
    all_page_links = amazon_data_list2.find("div",{"id":"zg_paginationWrapper"}).find("ol",{"class":"zg_pagination"}).findAll("li")

    i = i + 1
    for each_page_link in all_page_links:
        
        page_link = each_page_link.find("a").get("href")
        print(page_link)
        list4_data = requests.get(page_link)
        amazon_data_list4  = BeautifulSoup(list4_data.content, 'html.parser')
    
        amazon_product_data = amazon_data_list4.find("div",{"id":"zg_left_col1"}).find("div",{"id":"zg_centerListWrapper"}).findAll("div",{"class":"zg_itemImmersion"})
        for list3 in amazon_product_data:
            rank = list3.find("div",{ "class":"zg_rankDiv"}).find("span",{"class":"zg_rankNumber"}).text
            if list3.find("div",{"class":"zg_itemWrapper"})is None:
                print("Product details are not avaliable for this rank", rank.replace("\n",""))
                product_name = "NA"
                product_link = "NA"
                rating = "NA"
                rating_link = "NA"
                ratings_count = "NA"
                product_price = "NA"
                product_prime = "NA"
            else:
                zg_itemWrapper = list3.find("div",{"class":"zg_itemWrapper"})
                if zg_itemWrapper.find("div",{"class":"zg_title"}) is None:
                    product_name = "NA"
                    product_link = "NA"
                else:
                    product_name = zg_itemWrapper.find("div",{"class":"zg_title"}).text
                    product_link = zg_itemWrapper.find("div",{"class":"zg_title"}).find("a").get("href").replace("\n","")
            
                if zg_itemWrapper.find("div",{"class":"zg_reviews"}).find("a",{"class":"a-link-normal a-text-normal"}) is None:
                    product_reviews_link = "NA"
                    product_ratings = "NA"
                else:
                    product_reviews = zg_itemWrapper.find("div",{"class":"zg_reviews"}).findAll("a",{"class":"a-link-normal a-text-normal"})
                    product_reviews_link = product_reviews[0].get("href")
                    product_ratings = product_reviews[0].text
                if zg_itemWrapper.find("div",{"class":"zg_reviews"}).find("span",{"class":"a-size-small"}) is None:
                    product_ratings_count = "NA"
                else:
                    product_ratings_count = zg_itemWrapper.find("div",{"class":"zg_reviews"}).find("span",{"class":"a-size-small"}).find("a",{"class":"a-link-normal"}).text 
              
                if zg_itemWrapper.find("div",{"class":"zg_itemPriceBlock_compact"}).find("div",{"class":"zg_price"}).find("strong",{"class":"price"}) is None:
                    product_price = "NA"
                else:
                    product_price = zg_itemWrapper.find("div",{"class":"zg_itemPriceBlock_compact"}).find("div",{"class":"zg_price"}).find("strong",{"class":"price"}).text
            
                data = rank + "," + product_name.replace(",","") + "," +  product_link  + "," + product_reviews_link  + "," + product_ratings.replace("\n","")  + "," + product_ratings_count.replace(",","") + "," + product_price + "\n"
                print rank
                file.write(bytes(data.encode("utf-8")))  
            
file.close()
            
#%%

